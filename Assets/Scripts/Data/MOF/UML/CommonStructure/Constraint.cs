///////////////////////////////////////////////////////////
//  Constraint.cs
//  Implementation of the Class Constraint
//  Generated by Enterprise Architect
//  Created on:      20-Mar-2019 11:06:27
//  Original author: Iva
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using UML.CommonStructure;
namespace UML.CommonStructure
{
    /// <summary>
    /// A Constraint is a condition or restriction expressed in natural language 
    /// text or in a machine readable language for the purpose of declaring some 
    /// of the semantics of an Element or set of Elements.
    /// </summary>
    public class Constraint : Element /*: PackageableElement*/ // TODO
    {

        /// <summary>
        /// The ordered set of Elements referenced by this Constraint.
        /// </summary>
        public readonly LinkedList<UML.CommonStructure.Element> constrainedElement = new LinkedList<UML.CommonStructure.Element>();
        /// <summary>
        /// Specifies the Namespace that owns the Constraint.
        /// </summary>
        //public Namespace context; // TODO
        /// <summary>
        /// A condition that must be true when evaluated in order for the Constraint to be satisfied.
        /// </summary>
        public UML.Values.ValueSpecification specification;

        public Constraint()
        {

        }

        ~Constraint()
        {

        }

        public override string XmiType() { return "uml:InteractionConstraint"; }

    }//end Constraint

}//end namespace CommonStructure