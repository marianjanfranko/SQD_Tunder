///////////////////////////////////////////////////////////
//  Interaction.cs
//  Implementation of the Class Interaction
//  Generated by Enterprise Architect
//  Created on:      04-Oct-2018 16:51:31
//  Original author: Iva
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using UML.Interactions;
//using UML.CommonBehavior; // TODO
//using UML.Actions; // TODO
namespace UML.Interactions {
	/// <summary>
	/// An Interaction is a unit of Behavior that focuses on the observable exchange of
	/// information between connectable elements.
	/// </summary>
	public class Interaction : InteractionFragment /*, Behavior*/ { // TODO

		/// <summary>
		/// Specifies the participants in this Interaction.
		/// </summary>
		public readonly List<UML.Interactions.Lifeline> lifeline = new List<UML.Interactions.Lifeline>();
		/// <summary>
		/// The Messages contained in this Interaction.
		/// </summary>
		public readonly List<UML.Interactions.Message> message = new List<UML.Interactions.Message>();
		/// <summary>
		/// The ordered set of fragments in the Interaction.
		/// </summary>
		public readonly List<UML.Interactions.InteractionFragment> fragment = new List<UML.Interactions.InteractionFragment>();
		/// <summary>
		/// Specifies the gates that form the message interface between this Interaction
		/// and any InteractionUses which reference it.
		/// </summary>
		public readonly List<UML.Interactions.Gate> formalGate = new List<UML.Interactions.Gate>();
        /// <summary>
        /// Actions owned by the Interaction.
        /// </summary>
        //public readonly LinkedList<UML.Actions.Action> action = new LinkedList<UML.Actions.Action>(); // TODO

        public Interaction(){

		}

		~Interaction(){

		}

        public override string XmiType() { return "uml:Interaction"; }

    }//end Interaction

}//end namespace Interactions