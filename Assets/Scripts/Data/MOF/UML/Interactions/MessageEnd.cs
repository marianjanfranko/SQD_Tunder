///////////////////////////////////////////////////////////
//  MessageEnd.cs
//  Implementation of the Class MessageEnd
//  Generated by Enterprise Architect
//  Created on:      04-Oct-2018 16:51:33
//  Original author: Iva
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using UML.Interactions;
using UML.CommonStructure;
namespace UML.Interactions {
	/// <summary>
	/// MessageEnd is an abstract specialization of NamedElement that represents what
	/// can occur at the end of a Message.
	/// </summary>
	public abstract class MessageEnd : Element /*: NamedElement*/ { //TODO

		/// <summary>
		/// References a Message.
		/// </summary>
		public UML.Interactions.Message message;

		public MessageEnd(){

		}

		~MessageEnd(){

		}

		/// <summary>
		/// This query returns a set including the enclosing InteractionFragment this
		/// MessageEnd is enclosed within.
		/// </summary>
		/// <param name="result"></param>
		public InteractionFragment enclosingFragment(InteractionFragment result){

			return null;
		}

		/// <summary>
		/// This query returns value true if this MessageEnd is a receiveEvent.
		/// </summary>
		/// <param name="result"></param>
		public bool isReceive(){
            return true;    //TODO
        }

        /// <summary>
        /// This query returns value true if this MessageEnd is a sendEvent.
        /// </summary>
        /// <param name="result"></param>
        public bool isSend(){
            return true;    //TODO
		}

		/// <summary>
		/// This query returns a set including the MessageEnd (if exists) at the opposite
		/// end of the Message for this MessageEnd.
		/// </summary>
		/// <param name="result"></param>
		public MessageEnd oppositeEnd(MessageEnd result){

			return null;
		}

	}//end MessageEnd

}//end namespace Interactions