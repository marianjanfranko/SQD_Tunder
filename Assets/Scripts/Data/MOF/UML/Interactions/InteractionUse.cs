///////////////////////////////////////////////////////////
//  InteractionUse.cs
//  Implementation of the Class InteractionUse
//  Generated by Enterprise Architect
//  Created on:      04-Oct-2018 16:51:31
//  Original author: Iva
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



//using UML.Values; // TODO
using UML.Interactions;
//using UML.Classification; // TODO
namespace UML.Interactions {
    /// <summary>
    /// An InteractionUse refers to an Interaction. The InteractionUse is a shorthand
    /// for copying the contents of the referenced Interaction where the InteractionUse
    /// is. To be accurate the copying must take into account substituting parameters
    /// with arguments and connect the formal Gates with the actual ones.
    /// </summary>
    public class InteractionUse : InteractionFragment {

        /// <summary>
        /// The actual arguments of the Interaction.
        /// </summary>
        //public readonly LinkedList<UML.Values.ValueSpecification> argument = new LinkedList<UML.Values.ValueSpecification>(); // TODO
        /// <summary>
        /// The value of the executed Interaction.
        /// </summary>
        //public UML.Values.ValueSpecification returnValue; // TODO
        /// <summary>
        /// Refers to the Interaction that defines its meaning.
        /// </summary>
        public UML.Interactions.Interaction refersTo;
        /// <summary>
        /// The actual gates of the InteractionUse.
        /// </summary>
        public readonly LinkedList<UML.Interactions.Gate> actualGate = new LinkedList<UML.Interactions.Gate>();
        /// <summary>
        /// The recipient of the return value.
        /// </summary>
        //public UML.Classification.Property returnValueRecipient; // TODO

        public InteractionUse(){

		}

		~InteractionUse(){

		}

	}//end InteractionUse

}//end namespace Interactions